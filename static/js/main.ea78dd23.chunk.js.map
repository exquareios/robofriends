{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAY,sDAAjB,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,kCAAKC,YCWFK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACCA,EAAOC,KAAI,SAACC,EAAMC,GACf,OAAQ,cAAC,EAAD,CAERR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHbS,SCOHC,EAbE,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE5B,OACI,qBAAKV,UAAY,SAAjB,SACI,uBAAOA,UAAY,mCACfW,KAAM,SACNC,YAAc,gBACdC,SAAYH,O,MCCbI,MARf,SAAgBC,GACZ,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCoBJC,E,kDAtBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACjBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAGjC,WACI,OAAIG,KAAKJ,MAAMC,SAEX,8BACF,2DAGKG,KAAKX,MAAMK,a,GAnBCQ,aCyCZC,E,kDApCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACV,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAX7C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJR,E,qDAOjB,WAAoB,IAAD,OACfyB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAMtC,WACI,MAA8BZ,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACT8B,EAAgBnC,EAAOoC,QAAO,SAAAC,GAChC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQtC,EAAOwC,OACT,sBAAK5C,UAAW,KAAhB,UACA,oBAAIA,UAAU,KAAd,2BACN,cAAC,EAAD,CAAWU,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAUmC,WANI,+C,GAtBdX,aCMHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea78dd23.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img alt='robots' src= {`https://robohash.org/${id}?200x200`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p> {email}</p>\r\n        </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Card\r\n\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n        {robots.map((user, i) => {\r\n            return (<Card \r\n            key ={i} \r\n            id = {robots[i].id} \r\n            name = {robots[i].name}  \r\n            email = {robots[i].email} />)\r\n    })\r\n    }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nconst SearchBox =({searchfield, searchChange}) => {\r\n\r\n    return (\r\n        <div className = 'tc pa2'>\r\n            <input className = 'pa3 ba b--green bg-lightest-blue' \r\n                type= 'search'\r\n                placeholder = 'search robots'\r\n                onChange = {searchChange}\r\n            />        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        <div style= {{overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n            this.setState({hasError: true})\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.hasError){\r\n        return (\r\n            <div>\r\n          <h1> Opps. That is not good</h1>      \r\n            </div>\r\n        )}\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n        }\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({robots: users}));\r\n}\r\n    onSearchChange = (event) =>{\r\n            this.setState({searchfield: event.target.value})\r\n        }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state\r\n        const filteredRobots= robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ? <h1> Loading </h1> :(\r\n              <div className= 'tc'>\r\n              <h1 className='f1'> Robo Friends</h1>\r\n        <SearchBox searchChange = {this.onSearchChange} />\r\n        <Scroll>\r\n        <ErrorBoundry>\r\n        <CardList robots = {filteredRobots}/>\r\n        </ErrorBoundry>\r\n        </Scroll>\r\n        \r\n        </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}